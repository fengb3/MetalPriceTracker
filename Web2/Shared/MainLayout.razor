@inherits LayoutComponentBase
@inject IMetalMetaApi       MetalMetaApi
@inject ILogger<MainLayout> Logger
@using Lib.EventStream

<MApp>
    <MAppBar App>
        <MAppBarNavIcon @onclick="() => _drawer = !_drawer"></MAppBarNavIcon>
        <MToolbarTitle>Web2</MToolbarTitle>
        <MSpacer></MSpacer>
        <MButton Text Color="primary" Target="_blank" Href="https://docs.masastack.com/blazor/introduction/why-masa-blazor">About</MButton>
    </MAppBar>

    <MNavigationDrawer App @bind-Value="_drawer">
        <MList Nav Routable>
            <MListItem Href="/" ActiveClass="primary--text">
                <MListItemIcon>
                    <MIcon>fa-solid fa-house</MIcon>
                </MListItemIcon>
                <MListItemContent>
                    <MListItemTitle>Home</MListItemTitle>
                </MListItemContent>
            </MListItem>
            <MListItem Href="/counter" ActiveClass="primary--text">
                <MListItemIcon>
                    <MIcon>fa-solid fa-plus</MIcon>
                </MListItemIcon>
                <MListItemContent>
                    <MListItemTitle>Counter</MListItemTitle>
                </MListItemContent>
            </MListItem>
            <MListItem Href="/fetchdata" ActiveClass="primary--text">
                <MListItemIcon>
                    <MIcon>fa-solid fa-list</MIcon>
                </MListItemIcon>
                <MListItemContent>
                    <MListItemTitle>Fetch data</MListItemTitle>
                </MListItemContent>
            </MListItem>
        </MList>
        <MDivider></MDivider>
        <MList Nav>
            <MListItemGroup>
                @foreach (var item in _navItems)
                {
                    <MListItem Href=@item.Href>
                        <MListItemIcon>
                            <MIcon>@item.Icon</MIcon>
                        </MListItemIcon>

                        <MListItemContent>
                            <MListItemTitle>@item.Code</MListItemTitle>
                        </MListItemContent>
                    </MListItem>
                }
            </MListItemGroup>
        </MList>
    </MNavigationDrawer>

    <MMain>
        <MContainer Fluid>
            <MErrorHandler>
                @Body
            </MErrorHandler>
        </MContainer>
    </MMain>
</MApp>

@code {

    private bool? _drawer;

    private List<NavItems> _navItems = new();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        Logger.LogDebug("OnAfterRenderAsync - {1}", firstRender);
        
        if (!firstRender) return;

        _navItems = [];

        // return base.OnAfterRenderAsync(firstRender);
        var httpResponseMessage = await MetalMetaApi.GetCodesAsync();

        var asyncResult = httpResponseMessage.ReceiveChunkAsync<string>(default);

        await foreach (var code in asyncResult)
        {
            _navItems.Add(new NavItems(code, $"/MetalDetail/code={code}"));
            StateHasChanged();
        }
    }

    record NavItems(string Code, string Href, string Icon = "fa-solid fa-poo");

}